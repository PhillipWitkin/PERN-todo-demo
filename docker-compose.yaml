version: '3.8'
services:
  todo-db:
    container_name: todo_db_postgres_container
    image: postgres
    restart: always
    environment: 
      DATABASE_HOST: 127.0.0.1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: todo_db
      PGDATA: /var/lib/postgresql/data
    ports:
     - '5432:5432'
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

  pgadmin:
    container_name: todo_pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: phillip.witkin@galvanize.com
      PGADMIN_DEFAULT_PASSWORD: docker
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - todo-db


  # todo-api:
  #   container_name: todo_api_container
  #   build: todo_api/
  #   stdin_open: true
  #   tty: true
  #   depends_on:
  #     todo-db:
  #       condition: service_healthy
  #   ports:
  #     - "8082:8082"
  #   environment: 
  #     NODE_ENV: development
  #     PORT: 8082
  #     POSTGRES_HOST: todo-db
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_PORT: 5432
  #     POSTGRES_DB: todo_db

  #   # volumes:
  #   #   - ./todo_api/:/app:Z

  #   command: npm run start:dev

  # todo-ui:
  #   container_name: todo_ui_container
  #   build: todo_ui/
  #   depends_on:
  #     - 'todo-api'
  #   ports:
  #     - '3000:3000'
  #   # volumes:
  #   #   - ./todo_ui/:/app:Z
    
  #   command: npm start

volumes:
  pgdatasource:
  pgadmin-data:

networks:
  default: