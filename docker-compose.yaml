services:
  todo-db:
    container_name: todo_db_postgres_container
    image: postgres
    restart: always
    environment: 
     - DATABASE_HOST=127.0.0.1
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_PORT=5432
     - POSTGRES_DB=todo_db
    ports:
     - '6432:5432'
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

  pgadmin:
    container_name: todo_pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: phillip.witkin@galvanize.com
      PGADMIN_DEFAULT_PASSWORD: docker
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - todo-db


  todo-api:
    container_name: todo_api_container
    build: todo_api/
    depends_on:
      todo-db:
        condition: service_healthy
    ports:
      - '8082:8082'
    environment: 
      - NODE_ENV=development
      - PORT=8082
      - DATABASE_HOST=capstone-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_DB=capstone
    # volumes:
    #   - type: bind
    #     source: ./todo_api
    #     target: /app
    command: npm run start:dev

  todo-ui:
    container_name: todo_ui_container
    build: todo_ui/
    depends_on:
      - 'todo-api'
    ports:
      - '3001:3000'
    # volumes:
    #   - type: bind
    #     source: ./ui
    #     target: /app
    command: npm start

volumes:
  pgdatasource:
  pgadmin-data: